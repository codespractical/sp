#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<ctype.h>
struct symboltable
{
	char Symbol[8];
	int  Address;
	int  Size;
}ST[20];

struct intermediatecode
{
	int LC;
	char opcode1[8],mcode1[8];
	char opcode2[8],mcode2[8];
	char opcode3[8],mcode3[8];
}IC[30];

struct Littable
{
	char literal[7];
	int address;
}LIT[10];

struct pooltable
{
	int literal_no;
}PT[10];

int iIC=0;
char s1[8],s2[8],s3[8],s4[10],s5[8],s6[8],s7[8];


void init()
{
	strcpy(s1,"");
	strcpy(s2,"");
	strcpy(s3,"");
	strcpy(s4,"");
	strcpy(s5,"");
	strcpy(s6,"");
	strcpy(s7,"");
}

void mcode()
{
	int i;
	printf("\nMachine code");
	for(i=0;i<iIC;i++)
	{
		switch(IC[i].opcode1[0])
		{
			case 'D':
				if(strcmp(IC[i].mcode1,"01")==0)
					printf("\n%d) + 00 0 00%s",IC[i].LC,IC[i].mcode2);
				break;
			case 'A':
				break;
			case 'I':
				if(strcmp(IC[i].mcode1,"00")==0)	//stop
					printf("\n%d) + 00 0 000",IC[i].LC);
				else
				{
					printf("\n%d) + %s",IC[i].LC,IC[i].mcode1);
				if(strcmp(IC[i].opcode2,"S")!=0) //(strcmp(IC[i].opcode2,"RG")==0 || strcmp(IC[i].opcode2,"CC") ==0)
						printf(" %d",atoi(IC[i].mcode2));	// for 1st operand register or condition
					else
						printf(" 0 %d",ST[atoi(IC[i].mcode2)].Address);	//for read and print
						
					if(strcmp(IC[i].opcode3,"L")==0)
						printf(" %d",LIT[atoi(IC[i].mcode3)].address);
					else if(strcmp(IC[i].opcode3,"S")==0)
						printf(" %d",ST[atoi(IC[i].mcode3)].Address);
				}
				break;
		}
	}
}


int main()
{
	int i,j=0,count;
	char nextline[80];
	FILE *fp;
	
	fp=fopen("lit.txt","r");
	j=0;
	
	printf("Literal table\n");
	while(fscanf(fp,"%s%s",s1,s2) != -1)
	{
		strcpy(LIT[j].literal,s1);
		LIT[j].address=atoi(s2);
		printf("%s %d\n",LIT[j].literal,LIT[j].address);
		j++;
	}
	fclose(fp);

	fp=fopen("pool.txt","r");
	j=0;
	printf("\nPool table\n");
	while(fscanf(fp,"%s",s1)!=-1)
	{
		PT[j].literal_no=atoi(s1);
		printf("%d\n",PT[j].literal_no);
		j++;
	}
	fclose(fp);

	fp=fopen("sym.txt","r");
	j=0;
	printf("\nSymbol table\n");
	while(fscanf(fp,"%s%s%s",s1,s2,s3)!=-1)
	{
		strcpy(ST[j].Symbol,s1);
		ST[j].Address=atoi(s2);
		ST[j].Size=atoi(s3);
		printf("%s %d %d\n",ST[j].Symbol,ST[j].Address,ST[j].Size);
		j++;
	}
	fclose(fp);

	fp=fopen("inter.txt","r");
	j=0;
	printf("\nIntermediate code\n");
	while(!feof(fp))
	{
		i=0;
		nextline[i]=fgetc(fp);
		while(nextline[i]!='\n'&& nextline[i]!=EOF )
		{
			if(!isalnum(nextline[i]))
				nextline[i]=' ';
			i++;
			nextline[i]=fgetc(fp);
		}
		nextline[i]='\0';
		init();
		count=sscanf(nextline,"%s%s%s%s%s%s%s",s1,s2,s3,s4,s5,s6,s7);
		if(count==-1)
			continue;
		IC[j].LC=atoi(s1);
		strcpy(IC[j].opcode1,s2);
		strcpy(IC[j].mcode1,s3);
		strcpy(IC[j].opcode2,s4);
		strcpy(IC[j].mcode2,s5);
		strcpy(IC[j].opcode3,s6);
		strcpy(IC[j].mcode3,s7);
		printf("%d %s %s %s %s %s %s\n",IC[j].LC,IC[j].opcode1,IC[j].mcode1,IC[j].opcode2,IC[j].mcode2,IC[j].opcode3,IC[j].mcode3);
		j++;
	}
	iIC=j;
	fclose(fp);
	
	mcode();
	printf("\n");
	return 0;
}

/*
					OUTPUT


Literal table
='5' 518
='1' 519
='5' 520
='1' 525
='1' 542

Pool table
0
3
4

Symbol table
LOOP 510 0
A 526 1
NEXT 523 0
B 527 15
BACK 510 1

Intermediate code
0 AD 01 C 510  
510 IS 04 RG 01 S 1
511 IS 04 RG 01 L 0
512 IS 05 RG 01 S 1
513 IS 07 CC 04 S 2
514 IS 04 RG 03 S 3
515 IS 01 RG 03 L 1
516 IS 05 RG 03 S 3
517 IS 02 RG 03 L 2
521 IS 01 RG 03 S 3
522 IS 07 CC 02 S 0
523 IS 02 RG 01 L 3
524 IS 07 CC 01 S 4
526 IS 00    
525 IS 03 RG 03 L 4
526 DL 01 C 1  
527 DL 02 C 15  

Machine code
510) + 04 1 526
511) + 04 1 518
512) + 05 1 526
513) + 07 4 523
514) + 04 3 527
515) + 01 3 519
516) + 05 3 527
517) + 02 3 520
521) + 01 3 527
522) + 07 2 510
523) + 02 1 525
524) + 07 1 510
526) + 00 0 000
525) + 03 3 542
526) + 00 0 001*/	