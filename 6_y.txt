%{
	/*This is YACC specification*/
	#include<stdio.h>
	#include<math.h>
	int yylex();
	int yyerror();
%}
%token NUMBER
%left '-' '+'
%left '*' '/'
%left '^'
%nonassoc UMINUS
%%
Statement:exp {printf("=%d\n", $1);};

exp: exp '+' exp{$$=$1+$3;}|
	exp '-' exp{$$=$1-$3;}|
	exp '*' exp{$$=$1*$3;}|
	exp '/' exp{$$=$1/$3;}|
	'-' exp %prec UMINUS{$$=-$2;}|
	'(' exp ')' {$$=$2;}|
	NUMBER {$$=$1;};

%%
int main()
{
	yyparse();
}
int yyerror()
{
}
int yywrap()
{
	return 1;
}

/*
Steps to run this code

lex calc.l
yacc -d calc.y
gcc y.tab.c lex.yy.c
./a.out

*/
